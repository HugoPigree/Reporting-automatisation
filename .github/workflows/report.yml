
name: Generate Excel Report

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"  # Lundi 07:00 UTC

jobs:
  build-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Tests
        run: pytest -q
      - name: Generate report
        run: python -m app.main --no-email
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: excel-report
          path: reports/*.xlsx
      - name: Send email (optional)
        if: ${{ env.SMTP_HOST != '' }}
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_TO:   ${{ secrets.EMAIL_TO }}
        run: |
          python - << 'PY'
          import os, yaml, datetime as dt, json
          cfg = {
            "email": {
              "enabled": True,
              "smtp_host": os.environ.get("SMTP_HOST"),
              "smtp_port": int(os.environ.get("SMTP_PORT","587")),
              "use_tls": True,
              "username": os.environ.get("SMTP_USER"),
              "password": os.environ.get("SMTP_PASS"),
              "from_addr": os.environ.get("SMTP_USER"),
              "to_addrs": [os.environ.get("EMAIL_TO")],
              "subject": "Rapport ventes â€” {{DATE}}",
              "html": "<p>Bonjour,</p><p>Rapport <b>{{DATE}}</b> en PJ.</p>"
            },
            "report_dir": "./reports",
            "report_prefix": "rapport",
            "date_format": "%Y-%m-%d"
          }
          # find most recent file
          import glob, os
          files = sorted(glob.glob("reports/*.xlsx"), key=os.path.getmtime)
          assert files, "No report generated"
          report = files[-1]
          from app.emailer import send_email
          send_email(cfg["email"], report, dt.date.today().strftime("%Y-%m-%d"))
          print("Email sent.")
          PY
